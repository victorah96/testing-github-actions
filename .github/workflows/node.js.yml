# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # Defines the runner/os for the container/vm to run the job
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Declare the versions to run build from 
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # Pulls the code for this repository to the VM 
    - uses: actions/checkout@v3
    # Cache npm dependencies that can be used for consecutive jobs to avoid downloading every time the job is run, in this case could be used to check for cached npm depedencies before continue running npm i
    # Looks like npm ci already handles that check for us. Will only run if there are mismatch between cached npm and package-lock.json
    - name: Cache NPM dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-cache-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        # Runs one build job for each node version
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

